<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ClientpostProject</title>
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/pop.css" />
    <!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css" /> -->
    <style>
      /* General resets */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      /* Form container styles */
      #unique-assignment-form {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 600px;
        margin: 20px auto;
      }

      /* Title styling */
      #form-title {
        text-align: center;
        margin-bottom: 20px;
        font-size: 24px;
        color: #007bff; /* Blue color */
      }

      /* Label styling */
      label {
        margin-bottom: 5px;
        font-weight: bold;
        color: #333;
      }

      /* Input fields styling */
      input[type="text"],
      input[type="number"],
      input[type="date"],
      textarea,
      select {
        margin-bottom: 15px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
      }

      /* Special input field for textarea */
      textarea {
        resize: vertical;
      }

      /* Checkbox styling */
      input[type="checkbox"] {
        margin-top: 10px;
        margin-right: 10px;
      }

      /* Button styling */
      #submit-btn {
        background-color: #007bff; /* Blue color */
        color: white;
        padding: 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s ease;
      }

      #submit-btn:hover {
        background-color: #0056b3;
      }

      /* Responsive design */
      @media (max-width: 768px) {
        #unique-assignment-form {
          padding: 15px;
        }

        #form-title {
          font-size: 20px;
        }

        input[type="text"],
        input[type="number"],
        input[type="date"],
        textarea,
        select,
        #submit-btn {
          font-size: 16px;
        }
      }
    </style>
  </head>
  <body>
    <!-- Include the nav.ejs partial -->
    <%- include('../partials/nav') %>
    <main>
      <div class="container123">
        Hey Client You are Highly Request to fillup the form accrodinlgy and Pls
        i request you that do not sperad vulgarity.
      </div>
      <div class="container123">
        <form action="#" method="POST" id="unique-assignment-form">
          <h2 id="form-title">Assignment Details Form</h2>

          <label for="student-name" id="label-student-name"
            >Student Name:</label
          >
          <input
            type="text"
            id="student-name"
            name="student_name"
            value="<%= user.userName  %>"
            readonly
          />

          <label for="course-name" id="label-course-name">Course Name:</label>
          <input
            type="text"
            id="course-name"
            name="course_name"
            placeholder="optional"
          />

          <label for="course-code" id="label-course-code">Course Code:</label>
          <input
            type="text"
            id="course-code"
            name="course_code"
            placeholder="optional"
          />

          <label for="semester" id="label-semester">Semester:</label>
          <input type="text" id="semester" name="semester" required />

          <label for="assignment-title" id="label-assignment-title"
            >Assignment Title:</label
          >
          <input
            type="text"
            id="assignment-title"
            name="assignment_title"
            required
          />

          <label for="assignment-type" id="label-assignment-type"
            >Assignment Type:</label
          >
          <input
            type="text"
            id="assignment-type"
            name="assignment_type"
            placeholder="optional"
          />

          <label for="description" id="label-description">Description:</label>
          <textarea
            id="description"
            name="description"
            rows="5"
            required
          ></textarea>

          <label for="skills-required" id="label-skills-required"
            >Skills Required:</label
          >
          <input
            type="text"
            id="skills-required"
            name="skills_required"
            required
          />

          <label for="deadline" id="label-deadline">Deadline:</label>
          <input type="date" id="deadline" name="deadline" required />

          <label for="budget" id="label-budget">Budget:</label>
          <input
            type="number"
            id="budget"
            name="budget"
            required
            placeholder="pls make sure you fillup considerable budget"
          />

          <label for="preferred-language" id="label-preferred-language"
            >Preferred Language:</label
          >
          <input
            type="text"
            id="preferred-language"
            name="preferred_language"
            required
          />

          <label for="payment-method" id="label-payment-method"
            >Payment Method:</label
          >
          <select id="payment-method" name="payment_method">
            <option value="cash">cash</option>
            <option value="paytamGateWay">paytamGateWay</option>
            <option value="BarterSystem">BarterSystem</option>
          </select>

          <label for="is-urgent" id="label-is-urgent">Is this urgent?</label>
          <input type="checkbox" id="is-urgent" name="is_urgent" />

          <button type="submit" id="submit-btn">Submit Assignment</button>
        </form>
      </div>
    </main>

    <!-- Include the nav.ejs partial -->
    <%- include('../partials/pop') %>

    <script src="/scripts/app.js"></script>
    <script src="/scripts/main.js"></script>
    <script src="/scripts/pop.js"></script>
  <script>
  function formatRemainingTime(ms) {
    const seconds = Math.floor(ms / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);

    const remainingSeconds = seconds % 60;
    const remainingMinutes = minutes % 60;
    const remainingHours = hours % 24;

    return `${days} days, ${remainingHours} hours, ${remainingMinutes} minutes, ${remainingSeconds} seconds`;
  }

  document
    .getElementById("submit-btn")
    .addEventListener("click", async function (event) {
      // Prevent the form from submitting the traditional way
      event.preventDefault();

      // Collect the form data
      const studentName = document.getElementById("student-name").value;
      const courseName = document.getElementById("course-name").value;
      const courseCode = document.getElementById("course-code").value;
      const semester = document.getElementById("semester").value;
      const assignmentTitle =
        document.getElementById("assignment-title").value;
      const assignmentType =
        document.getElementById("assignment-type").value;
      const description = document.getElementById("description").value;
      const skillsRequired =
        document.getElementById("skills-required").value;
      const deadline = document.getElementById("deadline").value;
      const budget = document.getElementById("budget").value;
      const preferredLanguage =
        document.getElementById("preferred-language").value;
      const paymentMethod = document.getElementById("payment-method").value;
      const isUrgent = document.getElementById("is-urgent").checked; // For checkbox

      // Create an object with all the form data
      const formData = {
        student_name: studentName,
        course_name: courseName,
        course_code: courseCode,
        semester: semester,
        assignment_title: assignmentTitle,
        assignment_type: assignmentType,
        description: description,
        skills_required: skillsRequired,
        deadline: deadline,
        budget: budget,
        preferred_language: preferredLanguage,
        payment_method: paymentMethod,
        is_urgent: isUrgent,
      };

      // Log the form data to the console (you can replace this with an API call)
      console.log("Form Data:", formData);

      try {
        // Send the form data to a server via a fetch request
        const response = await fetch("/client/postProject", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        });

        const result = await response.json();
        console.log(result);

        if (!response.ok) {
          if (response.status === 401) {
            showError(result.message);
            setTimeout(() => {
              window.location.href = "/home/signin";
            }, 3000);
            return; // Stop further execution here
          }
        }
        // Handle 429 error (rate-limiting)
        if (response.status == 429) {
          const remainingTime = formatRemainingTime(result.remainingTime);
          showError(
            `${
              result.message
            } Projects will be allowed again after: ${new Date(
              result.resetAt
            ).toLocaleString()}`
          );

          // Show additional message after a delay (5 seconds)
          setTimeout(() => {
            showError(`You can submit a project again in: ${remainingTime}`);
          }, 6000); // 5-second delay before showing reset time
          return;

          showError(result.message); // Show the error message if status is not 401
          return; // Stop further execution here
        }

        // Show a success message
        showMessage("Project Submitted Successfully");

        // Reset the form
        document.getElementById("unique-assignment-form").reset();
      } catch (error) {
        // Reset the form in case of an error
        document.getElementById("unique-assignment-form").reset();

        // Log the error to the console and show an error message
        console.error(error.message);
        showError("An error occurred: " + error.message);
      }
    });
</script>

  </body>
</html>
