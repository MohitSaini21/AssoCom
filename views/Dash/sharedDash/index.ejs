<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/pop.css" />

    <!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css" /> -->

    <style>
      #logout-button {
        background-color: tomato; /* Unique red color */
        color: white;
        font-size: 16px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      #logout-button:hover {
        background-color: tomato; /* Darker red on hover */
      }

      #logout-paragraph {
        font-size: 14px;
        color: #333;
        margin-bottom: 15px;
      }

      /* Hidden by default */
      .confirmation-box {
        display: none;
        background-color: white;
        color: #333;
        padding: 20px;
        border-radius: 10px;
        width: 300px;
        position: fixed;
        top: 20%; /* Keeps it away from the top */
        left: 50%;
        transform: translateX(-50%);
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 9999; /* Ensures the confirmation box is above other content */
        transition: transform 0.3s ease-in-out;
        margin-top: 10vh; /* Ensures there's a margin at the top */
        margin-bottom: 10vh; /* Ensures there's a margin at the bottom */
      }

      .confirmation-message {
        font-size: 14px;
        margin-bottom: 15px;
      }

      .confirmation-box button {
        background-color: #ff4d4d;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px;
        font-size: 16px;
      }

      .confirmation-box button:hover {
        background-color: #ff1a1a;
      }

      /* Responsive Design */
      @media (max-width: 600px) {
        .confirmation-box {
          width: 80%; /* Takes up 80% of the screen width on mobile */
          padding: 15px;
          top: 25%; /* Keeps a distance from the top */
          left: 50%;
          transform: translateX(-50%);
          margin-top: 10vh; /* Adds margin from top */
          margin-bottom: 10vh; /* Adds margin from bottom */
        }

        #logout-button {
          width: 100%;
          padding: 12px;
          font-size: 18px;
        }
      }
    </style>
  </head>
  <body>
    <!-- Include the nav.ejs partial -->
    <%- include('../partials/nav') %>
    <main>
      <!-- User Information Section -->
      <div class="container123">
        <h2>Hello <%= user.userName %></h2>
        <p><strong>Role:</strong> <%= user.role %></p>
        <p><strong>Email:</strong> <%= user.email %></p>
      </div>

      <!-- Freelancing Platform Overview -->
      <div class="container123">
        <section>
          <h3>Welcome to the Freelancing Platform</h3>
          <p>
            This platform connects clients and workers for various freelance
            projects. As a <strong>client</strong>, you can post projects, hire
            workers, and manage the progress of your tasks. As a
            <strong>worker</strong>, you can browse available projects, accept
            tasks, and earn by completing them successfully.
          </p>
          <p>
            Whether you're looking to hire skilled professionals or seeking
            opportunities to showcase your talents, this platform provides a
            seamless and secure environment for all your freelancing needs.
          </p>
        </section>
      </div>

      <!-- Client View Section (Visible if user is a client) -->
      <% if (user.role === 'client') { %>
      <div class="container123">
        <h3>As a Client:</h3>
        <p>
          Welcome to AssoCom, the ultimate freelancing platform designed
          exclusively for TMU students! Whether you're looking to get your
          assignments done by talented peers or you’re ready to offer your
          skills and earn money, we’ve got you covered. Our platform connects
          you with fellow students who are eager to collaborate, solve problems,
          and deliver high-quality work. With a seamless process for posting
          projects, reviewing offers, and choosing the right freelancer, AssoCom
          makes it easy to get things done on your terms. So why wait? Sign up
          today, unlock new opportunities, and start turning your skills into
          success!
        </p>
      </div>
      <% } %>

      <!-- Worker View Section (Visible if user is a worker) -->
      <% if (user.role === 'worker') { %>
      <div class="container123">
        <h3>As a Worker:</h3>
        <p>
          Welcome to AssoCom, the ultimate freelancing platform designed
          exclusively for TMU students! Whether you're looking to get your
          assignments done by talented peers or you’re ready to offer your
          skills and earn money, we’ve got you covered. Our platform connects
          you with fellow students who are eager to collaborate, solve problems,
          and deliver high-quality work. With a seamless process for posting
          projects, reviewing offers, and choosing the right freelancer, AssoCom
          makes it easy to get things done on your terms. So why wait? Sign up
          today, unlock new opportunities, and start turning your skills into
          success!
        </p>
      </div>

      <% } %>
      <div class="container123">
        <p id="logout-paragraph">Welcome, user! Click below to logout.</p>
        <button id="logout-button">Logout</button>

        <!-- Confirmation Dialog -->
        <div id="confirmation-box" class="confirmation-box">
          <p class="confirmation-message">
            If you logout, you'll need to log in again later to keep an eye on
            your account.
          </p>
          <p>Are you sure you want to logout?</p>
          <button id="confirm-yes">Yes</button>
          <button id="confirm-no">No</button>
        </div>
      </div>
    </main>
    <!-- Include the nav.ejs partial -->
    <%- include('../partials/pop') %>

    <script src="/scripts/app.js"></script>
    <script src="/scripts/main.js"></script>
    <script src="/scripts/pop.js"></script>
    <script src="/scripts/home.js"></script>
    <script type="module" src="/scripts/firebase.js"></script>
    <script type="module" src="/scripts/foreground.js"></script>
    <script>
      document
        .getElementById("logout-button")
        .addEventListener("click", function () {
          // Scroll to top of the page
          window.scrollTo({ top: 0, behavior: "smooth" });

          // Show the confirmation box when the logout button is clicked
          document.getElementById("confirmation-box").style.display = "block";
        });

      document
        .getElementById("confirm-yes")
        .addEventListener("click", function () {
          // Redirect to logout URL if the user clicks "Yes"
          window.location.href = "/CWS/logout";
        });

      document
        .getElementById("confirm-no")
        .addEventListener("click", function () {
          // Hide the confirmation box if the user clicks "No"
          document.getElementById("confirmation-box").style.display = "none";
        });
    </script>

    <script>
              // Check if the pageLoaded cookie exists
              if (
                !document.cookie
                  .split(";")
                  .some((item) => item.trim().startsWith("pageLoaded="))
              ) {
                // Set the pageLoaded cookie to prevent showing the pop-up messages next time
                document.cookie = "pageLoaded=true; path=/;";


                // User role-based messages (formal, professional tone)
                const workerMessages = [
                  "📈 Hey <%= user.userName %>, ready to take on exciting projects and earn a professional stipend? 💸",
                  "🎯 Your skills could lead to impactful assignments. Ready to build something great? 🚀",
                  "💡 Looking for a new challenge? Let’s create valuable solutions together! 🔨",
                  "🛠️ Time to upgrade your expertise! Let’s take these projects to the next level. 💼",
                  "💪 Work hard, get paid! Your hard work will reflect in your earnings. 💰",
                  "🔥 Flex your skills on real projects and elevate your career! 🏅"
                ];

                const clientMessages = [
                  "💼 Hello <%= user.userName %>, looking to find top-tier talent for your projects? 🌟",
                  "🎯 Want to host high-quality projects? Let’s turn your ideas into reality. 💡",
                  "🔥 Ready to hire skilled workers? Let's get started on your next great project. 👷‍♂️",
                  "💬 Need help with your next big project? We’ve got the right workers to make it a success. 🌟",
                  "💥 Hire the best to bring your vision to life. Let’s build something extraordinary! 💼",
                  "🛠️ Seeking skilled workers for top-level projects? We can help you find the right fit. 🚀"
                ];

                // Function to show messages with random direction and animation
                let messageIndex = 0;
                function showMessage(role) {
                  const messages = role === 'worker' ? workerMessages : clientMessages;

                  if (messageIndex < messages.length) {
                    const message = messages[messageIndex];
                    showMessageOnScreen(message);
                    messageIndex++;
                  }
                }

                // Function to display message on screen (popup with random animation)
                function showMessageOnScreen(message) {
                  const messagePopup = document.createElement("div");
                  messagePopup.style.position = "fixed";
                  messagePopup.style.zIndex = "9999";
                  messagePopup.style.fontSize = "18px";
                  messagePopup.style.fontWeight = "bold";
                  messagePopup.style.padding = "20px 30px";
                  messagePopup.style.color = getLineColor();
                  messagePopup.style.backgroundColor = "transparent"; // Transparent background
                  messagePopup.style.borderRadius = "8px"; // Rounded edges (no borders)
                  messagePopup.style.maxWidth = "70%";
                  messagePopup.style.textAlign = "center";
                  messagePopup.style.transition = "all 1s ease";
                  messagePopup.style.margin = "10px"; // Space from edges
                  messagePopup.style.border = "none"; // No border
                  messagePopup.innerHTML = message;

                  // Create background overlay to dim the rest of the page
                  const overlay = document.createElement("div");
                  overlay.style.position = "fixed";
                  overlay.style.top = "0";
                  overlay.style.left = "0";
                  overlay.style.width = "100%";
                  overlay.style.height = "100%";
                  overlay.style.backgroundColor = "rgba(0, 0, 0, 0.5)"; // Dark transparent background
                  overlay.style.zIndex = "9998"; // Overlay is behind the pop-up
                  overlay.style.transition = "all 1s ease";
                  document.body.appendChild(overlay);

                  // Add close (X) button
                  const closeButton = document.createElement("button");
                  closeButton.innerHTML = "❌";
                  closeButton.style.position = "absolute";
                  closeButton.style.top = "5px";
                  closeButton.style.right = "5px";
                  closeButton.style.fontSize = "18px";
                  closeButton.style.backgroundColor = "transparent";
                  closeButton.style.border = "none";
                  closeButton.style.color = "#fff";
                  closeButton.style.cursor = "pointer";
                  closeButton.onclick = () => {
                    messagePopup.remove(); // Remove the pop-up when clicked
                    overlay.remove(); // Remove the overlay when the pop-up is closed
                  };

                  // Append close button to the popup
                  messagePopup.appendChild(closeButton);

                  // Random position animation
                  const animation = getRandomDirection();
                  messagePopup.style[animation.direction] = "0"; // Animation direction (left, right, top, bottom)
                  messagePopup.style.opacity = "1";

                  // Adding popup to the screen
                  document.body.appendChild(messagePopup);

                  // Play pop sound when message appears
                  playPopSound();

                  // Randomize the position animation (from where the popup will enter)
                  setTimeout(() => {
                    messagePopup.style[animation.direction] = "-100px"; // Out of the screen after animation
                    messagePopup.style.opacity = "0";
                    overlay.style.opacity = "0"; // Fade out the overlay
                    setTimeout(() => {
                      messagePopup.remove();
                      overlay.remove(); // Remove overlay once the message disappears
                    }, 1000); // Message disappears after animation
                  }, 4000);
                }

                // Random direction for the pop-up (left, right, top, bottom)
                function getRandomDirection() {
                  const directions = [
                    { direction: "left", value: "-100px" },
                    { direction: "right", value: "100px" },
                    { direction: "top", value: "-100px" },
                    { direction: "bottom", value: "100px" }
                  ];
                  return directions[Math.floor(Math.random() * directions.length)];
                }

                // Line color for the pop-up (formal colors for message text, blue & white theme)
                function getLineColor() {
                  return "white"; // Formal blue-gray color
                }

                // Play pop sound when a message appears (removed if the audio URL is denied)
                function playPopSound() {
                  try {
                    const audio = new Audio('/pop-94319.mp3'); // You can use a custom sound if available
                    audio.play();
                  } catch (error) {
                    console.log("Sound access denied. Pop sound is not playing.");
                  }
                }

                // Show the first message immediately based on user role
                const user = <%- JSON.stringify(user) %>;
                showMessage(user.role); // Show role-specific messages (worker or client)

                // Wait for voices to be loaded
      function setFemaleVoiceAndSpeak() {
          const voices = speechSynthesis.getVoices();

          // Find a female voice
          const femaleVoice = voices.find(voice => voice.name.toLowerCase().includes('female'));

          if (femaleVoice) {
              const utterance = new SpeechSynthesisUtterance(`Welcome, ${user.userName}! As a ${user.role}, we hope you enjoy your experience here.`);
              utterance.voice = femaleVoice; // Set to the selected female voice
              utterance.pitch = 1.2;  // Adjust pitch
              utterance.rate = 1.0;   // Adjust speech rate
              utterance.volume = 1.0; // Set volume

              window.speechSynthesis.speak(utterance);
          }
      }

      // Ensure voices are loaded before setting the voice
      if (speechSynthesis.onvoiceschanged !== undefined) {
          speechSynthesis.onvoiceschanged = setFemaleVoiceAndSpeak;
      } else {
          setFemaleVoiceAndSpeak(); // For browsers that may not support onvoiceschanged
      }
                setInterval(() => showMessage(user.role), 8000);
              }
    </script>

    <!-- Include the Firebase JS SDK file -->
    <!-- <script type="module" src="/js/firebase.js"></script> -->
  </body>
</html>
