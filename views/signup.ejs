<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("partials/head") %>
    <!-- Include head partial for common meta, CSS, and JS -->
    <title>Signup | AssoCom</title>
  </head>
  <body>
    <%- include("partials/nav") %>
    <!-- Include the navigation bar -->

    <div class="container mt-5">
      <h2 class="text-center mb-4">Create Your Account</h2>

      <!-- Signup Form -->
      <form id="signupForm">
        <div class="row">
          <!-- Full Name -->
          <div class="col-md-6 mb-3">
            <label for="fullName" class="form-label">Full Name</label>
            <input
              type="text"
              class="form-control"
              id="fullName"
              name="fullName"
              placeholder="Enter your full name"
              required
            />
          </div>

          <!-- Email Address -->
          <div class="col-md-6 mb-3">
            <label for="email" class="form-label">Email Address</label>
            <input
              type="email"
              class="form-control"
              id="email"
              name="email"
              placeholder="Enter your email"
              required
            />
          </div>
        </div>

        <div class="row">
          <!-- Password -->
          <div class="col-md-6 mb-3">
            <label for="password" class="form-label">Password</label>
            <input
              type="password"
              class="form-control"
              id="password"
              name="password"
              placeholder="Enter a secure password"
              required
            />
          </div>

          <!-- Confirm Password -->
          <div class="col-md-6 mb-3">
            <label for="confirmPassword" class="form-label"
              >Confirm Password</label
            >
            <input
              type="password"
              class="form-control"
              id="confirmPassword"
              name="confirmPassword"
              placeholder="Re-enter your password"
              required
            />
          </div>
        </div>

        <!-- Role Selection -->
        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="role" class="form-label">Select Role</label>
            <select class="form-control" id="role" name="role" required>
              <option value="client">Client</option>
              <option value="worker">Worker</option>
            </select>
          </div>
        </div>

        <!-- Terms and Conditions -->
        <div class="form-check mb-3">
          <input
            class="form-check-input"
            type="checkbox"
            value=""
            id="terms"
            required
          />
          <label class="form-check-label" for="terms">
            I agree to the
            <a href="#" class="text-decoration-none">Terms and Conditions</a>
          </label>
        </div>

        <!-- Submit Button -->
        <div class="d-flex justify-content-center">
          <button type="button" class="btn btn-primary btn-lg" id="signupBtn">
            Sign Up
          </button>
        </div>
      </form>

      <!-- GitHub Login Button -->
      <div class="d-flex justify-content-center mt-4">
        <button
          type="button"
          class="btn btn-dark btn-lg"
          id="githubLoginBtn"
        >
          Signup with GitHub
        </button>
      </div>

      <!-- Informative Section -->
      <div class="mt-4 text-center">
        <p>
          Already have an account?
          <a href="/signin" class="text-decoration-none">Login here</a>
        </p>
      </div>
    </div>

    <!-- JavaScript to handle form submission and validation -->
    <script>
      document
        .getElementById("signupBtn")
        .addEventListener("click", async function () {
          const form = document.getElementById("signupForm");

          // Collect form data
          const formData = new FormData(form);
          const data = {};
          formData.forEach((value, key) => {
            data[key] = value;
          });

          // Check if all fields are filled
          if (
            !data.fullName ||
            !data.email ||
            !data.password ||
            !data.confirmPassword ||
            !data.role
          ) {
            alert("Please fill in all fields.");
            return; // Stop further execution if any field is missing
          }

          // Validation for Confirm Password
          const password = data.password;
          const confirmPassword = data.confirmPassword;

          if (password !== confirmPassword) {
            alert("Password and Confirm Password do not match.");
            return; // Stop further execution if passwords do not match
          }

          // Remove confirmPassword from the data before sending it
          delete data.confirmPassword;

          // Validation for Terms and Conditions
          const termsChecked = document.getElementById("terms").checked;
          if (!termsChecked) {
            alert("You must agree to the Terms and Conditions.");
            return; // Stop further execution if Terms are not checked
          }
          console.log(data);

          try {
            // Send POST request to the server
            const response = await fetch("/signup", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data), // Send data without confirmPassword
            });

            // Check the response status code
            if (response.ok) {
              const result = await response.json();
              // Handle successful signup (e.g., redirect to login page)
              alert("Signup successful! Please login.");
              window.location.href = "/signin"; // Redirect to login page
            } else {
              // Handle client-side errors (status 400)
              if (response.status === 400) {
                const errorData = await response.json();
                console.log(errorData)

                const errorMessages = errorData.errors.join("\n");
                alert(`Client-side Error: \n${errorMessages}`);
              }
              // Handle server-side errors (status 500)
              else if (response.status === 500) {
                const errorData = await response.json();
                alert(`${errorData.message}. Please try again later.`);
              } else {
                // Handle other errors
                alert(`Unexpected error occurred: ${response.status}`);
              }
            }
          } catch (error) {
            // Handle network errors
            console.log(error.message)
            alert(
              "An error occurred while submitting the form. Please try again later."
            );
          }
        });

      // Add functionality for GitHub login (example placeholder)
      document
        .getElementById("githubLoginBtn")
        .addEventListener("click", function () {
          // Redirect to GitHub login page or trigger GitHub OAuth flow
          window.location.href = "/auth/github"; // Adjust the URL as needed
        });
    </script>
  </body>
</html>
