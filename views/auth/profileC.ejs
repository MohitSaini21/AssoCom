<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <link
  rel="icon"
  href="/HomeImages/iconimage-fotor-20250127122413.png"
  type="image/png"
/>
    <title>Complete Your Profile</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
      }
      .container {
        max-width: 800px;
        margin: 50px auto;
        background-color: #ffffff;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      h1 {
        color: #007bff;
        text-align: center;
        font-size: 2.5rem;
      }
      p {
        color: #555;
        font-size: 1.1rem;
        line-height: 1.6;
        text-align: justify;
      }
      label {
        font-size: 1.1rem;
        font-weight: bold;
        color: #333;
      }
      select {
        width: 100%;
        padding: 10px;
        margin: 10px 0 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 1rem;
      }
      .info-box {
        background-color: #e9f7fe;
        padding: 15px;
        border-radius: 5px;
        border: 1px solid #b3e0f2;
        margin-bottom: 20px;
      }
      .info-box h3 {
        margin: 0;
        color: #007bff;
      }
      button {
        width: 100%;
        padding: 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1.1rem;
        cursor: pointer;
      }
      button:hover {
        background-color: #0056b3;
      }
      .footer-text {
        text-align: center;
        font-size: 0.9rem;
        color: #777;
      }
      .warning-box {
        background-color: #fff3cd;
        padding: 15px;
        border-radius: 5px;
        border: 1px solid #ffeeba;
        margin-bottom: 20px;
      }
      .warning-box h3 {
        margin: 0;
        color: #856404;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Complete Your Profile</h1>
      <p>
        To enhance your experience on our platform, kindly complete your profile
        by selecting your role and college. This will help us provide
        personalized services and connect you with relevant opportunities.
      </p>
      <p>
        Please make your selection below. If you are unsure of which option to
        choose, please feel free to reach out to our support team for guidance.
      </p>

      <div class="info-box">
        <h3>Why is this important?</h3>
        <p>
          By selecting your role and college, we can tailor your experience to
          meet your specific needs, whether you are a <strong>worker</strong> or
          a <strong>client</strong>.
        </p>
      </div>

      <!-- Warning Box (hidden by default) -->
      <div id="warningBox" class="warning-box" role="alert">
        <h3>Important:</h3>
        <p>
          If you change your role, please do not refresh or navigate away from
          this page. Doing so may cause errors. Once you submit your selections,
          you will be redirected.
        </p>
      </div>

      <!-- Alert Box (hidden by default) -->
      <div id="alertBox" class="alert alert-danger d-none" role="alert">
        Please select a role.
      </div>

      <form id="profileForm">
        <div class="form-group">
          <label for="role">Select Your Role:</label>
          <select class="form-control" name="role" id="role" required>
            <option value="">-- Select Role --</option>
            <option value="worker">Worker</option>
            <option value="client">Client</option>
          </select>

          <label for="college" class="form-label">Select Your College:</label>
          <select class="form-control" id="college" name="college" required>
            <!-- Dynamic College Options -->
            <option value="">-- Select College --</option>
            <!-- Sample Colleges, dynamically populated if needed -->
            <option value="Disha Institute of Science and Technology -[DIST]">
              Disha Institute of Science and Technology -[DIST]
            </option>
            <option value="MIT Moradabad">MIT Moradabad</option>
          </select>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
      </form>

      <p class="footer-text">
        If you require any assistance, please do not hesitate to contact our
        support team.
      </p>
    </div>

    <!-- Bootstrap JS, Popper.js, and jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
      document
        .getElementById("profileForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault(); // Prevent the default form submission

          const role = document.getElementById("role").value;
          const college = document.getElementById("college").value;
          const alertBox = document.getElementById("alertBox");
          const warningBox = document.getElementById("warningBox");

          if (!role || !college) {
            // Show the alert if no role or college is selected
            alertBox.classList.remove("d-none");
            return;
          } else {
            // Hide the alert if a role and college are selected
            alertBox.classList.add("d-none");
          }

          // Show the warning box about refreshing the page
          warningBox.classList.remove("d-none");

          try {
            const userId = "<%= userId %>"; // Use the passed userId from the server-side

            // Send the role and college information to the server
            const response = await fetch(`/home/fillRole/${userId}`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ role, college }),
            });

            // Ensure the response is JSON
            if (!response.ok) {
              throw new Error("Server error or invalid response.");
            }

            // Check if the response is in JSON format
            const contentType = response.headers.get("Content-Type");
            if (contentType && contentType.includes("application/json")) {
              const result = await response.json();
              console.log(result);

              if (response.ok) {
                // Show success alert
                const successAlert = document.createElement("div");
                successAlert.classList.add("alert", "alert-success");
                successAlert.role = "alert";
                successAlert.innerHTML =
                  result.message || "Profile updated successfully.";
                document.body.insertBefore(
                  successAlert,
                  document.querySelector(".container")
                );
                // Scroll the user to the top of the page to see the alert
                window.scrollTo({
                  top: 0,
                  behavior: "smooth", // Smooth scrolling to the top
                });
                setTimeout(() => successAlert.remove(), 3000); // Remove success alert after 3 seconds

                setTimeout(() => {
                  window.location.href = "/"; // Redirect to the home page
                }, 3000);
              } else {
                // Handle errors from the server (e.g., validation errors)
                const errorMessages =
                  result.errors?.join("\n") || "An error occurred.";
                const errorAlert = document.createElement("div");
                errorAlert.classList.add("alert", "alert-danger");
                errorAlert.role = "alert";
                errorAlert.innerHTML = `Error: ${errorMessages}`;
                document.body.insertBefore(
                  errorAlert,
                  document.querySelector(".container")
                );
                setTimeout(() => errorAlert.remove(), 3000); // Remove error alert after 3 seconds
                window.scrollTo({
                  top: 0,
                  behavior: "smooth", // Smooth scrolling to the top
                });
              }
            } else {
              throw new Error("The server did not return JSON.");
            }
          } catch (error) {
            // Handle network or unexpected errors (client-side errors)
            const errorAlert = document.createElement("div");
            errorAlert.classList.add("alert", "alert-danger");
            errorAlert.role = "alert";
            errorAlert.innerHTML = `Client-Side Error: An unexpected error occurred: ${error.message}`;
            document.body.insertBefore(
              errorAlert,
              document.querySelector(".container")
            );
            setTimeout(() => errorAlert.remove(), 3000); // Remove error alert after 3 seconds

            window.scrollTo({
              top: 0,
              behavior: "smooth", // Smooth scrolling to the top
            });
          }
        });
    </script>
  </body>
</html>
