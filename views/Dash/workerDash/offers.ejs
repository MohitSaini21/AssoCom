<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      href="/HomeImages/iconimage-fotor-20250127122413.png"
      type="image/png"
    />
    <title>Worker Offer Page</title>
    <link rel="stylesheet" href="/css/style.css" />
    <style>
      /* Container for the grid of cards */
      .custom-card-grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Flexible columns */
        gap: 20px;
        padding: 20px;
        box-sizing: border-box;
      }

      /* Style for individual cards */
      .custom-card {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
      }

      /* Card Image Styling */
      .custom-card-image {
        width: 100%;
        height: auto;
        object-fit: cover;
      }

      /* Card Content */
      .custom-card-content {
        padding: 16px;
      }

      .custom-card-title {
        font-size: 1.2em;
        font-weight: bold;
        margin: 0;
      }

      .custom-card-description {
        font-size: 1em;
        color: #555;
        margin-top: 8px;
        display: block;
        overflow: hidden;
        white-space: normal; /* Allow text to wrap */
        max-height: 150px; /* Limit height */
        line-height: 1.5;
        transition: max-height 0.3s ease;
      }

      .custom-card-description.expanded {
        max-height: none; /* Allow full expansion when clicked */
      }

      /* Hover effect for cards */
      .custom-card:hover {
        transform: translateY(-10px); /* Slight lift on hover */
      }

      /* Responsive design: Adjust layout for smaller screens */
      @media (max-width: 768px) {
        .custom-card-grid-container {
          grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Adjust column size */
        }
      }

      @media (max-width: 480px) {
        .custom-card-grid-container {
          grid-template-columns: 1fr; /* One column layout on very small screens */
        }
      }

      /* Chat Link Styling */
      .chat-link {
        display: inline-block;
        margin-top: 10px;
        padding: 8px 16px;
        background-color: #007bff;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        transition: background-color 0.3s ease;
      }

      .chat-link:hover {
        background-color: #0056b3;
      }

      /* Modal Styles */
      .unique-modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 100;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4); /* Semi-transparent black background */
        justify-content: center;
        align-items: center;
        text-align: center;
      }

      /* Modal Content */
      .unique-modal-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        width: 80%;
        max-width: 800px;
        max-height: 80vh;
        overflow-y: auto;
        margin: 0 10px;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }

      .unique-modal-header {
        font-size: 1.5em;
        margin-bottom: 15px;
        font-weight: bold;
      }

      .unique-modal-body {
        font-size: 1.1em;
        color: #555;
        width: 100%;
      }

      .unique-modal-close {
        color: #f44336;
        font-size: 2em;
        cursor: pointer;
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 200;
      }

      .unique-modal-close:hover,
      .unique-modal-close:focus {
        color: #d32f2f;
        text-decoration: none;
      }
    </style>
  </head>
  <body>
    <!-- Include the nav.ejs partial -->
    <%- include('../partials/nav') %>
    <main>
      <div class="container123">
        <h3>As a Worker:</h3>
        <p>
          Welcome! You can browse available projects, accept tasks, and track
          your work progress.
        </p>
        <p>You are on the right track! Offers will be provided soon.</p>
      </div>
      <div class="container123">
        <!-- Responsive Container for Cards -->
        <div class="custom-card-grid-container">
          <!-- Cards -->
          <% if (offers && offers.length > 0) { %> 
          <% offers.forEach(offer => { %>
          <div id="offer-card-<%= offer._id %>" class="custom-card">
            <div class="custom-card-content">
              <h3 class="custom-card-title">
                <%= offer.project.assignment_title %>
              </h3>
              <p class="custom-card-description" id="description-<%= offer._id %>">
                <strong>Amount:</strong> <%= offer.amount %><br />
                <strong>Status:</strong> <%= offer.status %><br />
                <strong>Deadline:</strong> <%= new Date(offer.deadline).toLocaleDateString() %><br />
                 
                <% if (offer.status == "rejected") { %>
                  <p>Hey <%= user.userName %>, <%= offer.project.student_name %> has rejected your offer. You might enhance the budget and make a bid again if the project has not received 5 bids yet.</p>
                <% } %>
                <% if (offer.status == "accepted") { %>
                  <p>Hey <%= user.userName %>, <%= offer.project.student_name %> has accepted your offer. You may chat with them.</p>
                  <a href="/CWS/chatSection/<%= offer.project.postedBy %>" class="chat-link">
                    Chat with <%= offer.project.student_name %>
                  </a>
                <% } %>
              </p>

              <div id="timer-<%= offer._id %>" style="color: red" class="expiration-timer">
                <!-- Timer will be updated dynamically -->
              </div>

              <!-- Delete Button -->
<button
  class="delete-offer-button"
  onclick="openDeleteModal('<%= offer._id %>', '<%= offer.project.assignment_title %>', '<%= offer.project._id %>', '<%= offer.worker._id %>')">
  Delete Offer
</button>



            </div>
          </div>
          <% }); %> 
          <% } else { %>
          <h3>You have not made any Bid yet.</h3>
          <% } %>
        </div>
      </div>
    </main>

    <!-- Modal for Confirmation -->
    <div class="unique-modal" id="deleteModal">
      <div class="unique-modal-content">
        <span class="unique-modal-close" onclick="closeDeleteModal()">&times;</span>
        <div class="unique-modal-header" id="deleteModalHeader">Delete Offer</div>
        <div class="unique-modal-body" id="deleteModalBody">
          Are you sure you want to delete this offer? This action cannot be undone.
        </div>
        <button id="confirmDeleteButton" class="chat-link">Yes, Delete Offer</button>
      </div>
    </div>

    <script src="/scripts/app.js"></script>
    <script src="/scripts/main.js"></script>
    <script>
    function openDeleteModal(offerId, offerTitle, projectId,workerID) {

     
      
  const modal = document.getElementById("deleteModal");
  const deleteModalHeader = document.getElementById("deleteModalHeader");
  const deleteModalBody = document.getElementById("deleteModalBody");
  const confirmDeleteButton = document.getElementById("confirmDeleteButton");

  deleteModalHeader.textContent = `Delete Offer: ${offerTitle}`;
  deleteModalBody.textContent = `Are you sure you want to delete the offer for "${offerTitle}"? This action cannot be undone.`;

  // Send both offerId and projectId in the URL when confirming deletion
  confirmDeleteButton.onclick = function () {
    window.location.href = `/worker/deleteOffer/${offerId}/${projectId}/${workerID}`;
  };

  modal.style.display = "flex";
}


      // Close the Delete Modal
      function closeDeleteModal() {
        const modal = document.getElementById("deleteModal");
        modal.style.display = "none";
      }

      // Close the modal when clicking outside of it
      window.onclick = function (event) {
        const modal = document.getElementById("deleteModal");
        if (event.target === modal) {
          modal.style.display = "none";
        }
      };

      // Timer for offer expiration
      const offers = <%- JSON.stringify(offers) %>;

      function updateTimer(expirationTime, offerId) {
        const timerElement = document.getElementById(`timer-${offerId}`);
        const currentTime = new Date().getTime();
        const remainingTime = expirationTime - currentTime;

        if (remainingTime <= 0) {
          timerElement.innerHTML = "This offer has expired.";
          return;
        }

        const seconds = Math.floor((remainingTime / 1000) % 60);
        const minutes = Math.floor((remainingTime / 1000 / 60) % 60);
        const hours = Math.floor((remainingTime / (1000 * 60 * 60)) % 24);
        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));

        timerElement.innerHTML = `Expires in ${days}d ${hours}h ${minutes}m ${seconds}s`;

        setTimeout(() => updateTimer(expirationTime, offerId), 1000);
      }

      offers.forEach(offer => {
        const expirationTime = new Date(offer.expiresAt).getTime();
        updateTimer(expirationTime, offer._id);
      });

      // Expand description on click (if it's too long)
      document.querySelectorAll('.custom-card-description').forEach(description => {
        description.addEventListener('click', function() {
          description.classList.toggle('expanded');
        });
      });
    </script>
    <script type="module" src="/scripts/foreground.js"></script>
  </body>
</html>
