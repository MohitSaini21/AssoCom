<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />

    <style>
      /* Error Popup Styles */
      body {
        background: linear-gradient(to bottom, #f5f5f5, #e6e6e6);
      }
      .error-popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #f8d7da;
        color: #721c24;
        padding: 20px;
        border: 1px solid #f5c6cb;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        display: none;
      }

      .error-popup button {
        margin-top: 10px;
        padding: 8px 16px;
        font-size: 14px;
        color: #721c24;
        background: #f5c6cb;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background 0.3s;
      }

      .error-popup button:hover {
        background: #f1b0b7;
      }

      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
        display: none;
      }
      .back-button:hover {
        background: #0056b3;
        transform: scale(1.05);
      }
      .back-button {
        margin-top: 20px;
        padding: 10px 20px;
        font-size: 14px;
        color: #fff;
        background: #007bff;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        text-decoration: none;
        transition: background 0.3s, transform 0.2s;
      }
    </style>

    <title>Signup | AssoCom</title>
  </head>
  <body>
    <div class="container mt-5">
      <a href="/" class="back-button">&larr; Back to Home</a>
      <br />
      <br />
      <br />

      <h2 class="text-center mb-4">Create Your Account and Get into Assocom</h2>

      <!-- Signup Form -->
      <form
        id="signupForm"
        style="
          background-color: #fff; /* Slightly darker than secondary */
          color: black; /* Light text for contrast */
          border-radius: 30px 10px 30px 10px; /* Creative asymmetric rounding */
          padding: 20px; /* Extra padding */
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
          font-family: Arial, sans-serif; /* Clean font for modern look */
        "
      >
        <div class="row">
          <!-- Full Name -->
          <div class="col-md-6 mb-3">
            <label for="userName" class="form-label">User Name</label>
            <input
              type="text"
              class="form-control"
              id="userName"
              name="userName"
              placeholder="Enter your userName make sure it is uniquie"
              oninput="limitUsernameWords(event)"
              required
            />
          </div>

          <!-- Email Address -->
          <div class="col-md-6 mb-3">
            <label for="email" class="form-label">Email Address</label>
            <input
              type="email"
              class="form-control"
              id="email"
              name="email"
              placeholder="Enter your email"
              oninput="limitEmailWords(event)"
              required
            />
          </div>
        </div>

        <div class="row">
          <!-- Password -->
          <div class="col-md-6 mb-3">
            <label for="password" class="form-label">Password</label>

            <input
              type="password"
              class="form-control"
              id="password"
              name="password"
              placeholder="Enter a secure password"
              oninput="limitPasswordWords(event)"
              required
            />
          </div>

          <!-- Confirm Password -->
          <div class="col-md-6 mb-3">
            <label for="confirmPassword" class="form-label"
              >Confirm Password</label
            >
            <input
              type="password"
              class="form-control"
              id="confirmPassword"
              name="confirmPassword"
              placeholder="Re-enter your password"
              required
            />
          </div>
        </div>

        <!-- Role Selection -->
        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="role" class="form-label">Select Role</label>
            <select class="form-control" id="role" name="role" required>
              <option value="client">Client</option>
              <option value="worker">Worker</option>
            </select>
          </div>
        </div>
        <!-- College Section -->
        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="college" class="form-label">Select Your College</label>
            <select class="form-control" id="college" name="college" required>
              <option value="Disha Institute of Science and Technology -[DIST]">
                Disha Institute of Science and Technology -[DIST]
              </option>
              <option value="MIT Moradabad">MIT Moradabad</option>
            </select>
          </div>
        </div>

        <!-- Terms and Conditions -->
        <div class="form-check mb-3">
          <input
            class="form-check-input"
            type="checkbox"
            value=""
            id="terms"
            required
          />
          <label class="form-check-label" for="terms">
            I agree to the
            <a
              href="#"
              class="text-decoration-none"
              data-bs-toggle="modal"
              data-bs-target="#termsModal"
            >
              Terms and Conditions
            </a>
          </label>
        </div>

        <!-- Terms and Conditions Modal -->
        <div
          class="modal fade"
          id="termsModal"
          tabindex="-1"
          aria-labelledby="termsModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-lg">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="termsModalLabel">
                  Terms and Conditions
                </h5>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div class="modal-body">
                <h6>1. Acceptance of Terms</h6>
                <p>
                  By signing up, you agree to comply with and be bound by these
                  Terms and Conditions.
                </p>

                <h6>2. User Roles</h6>
                <p>
                  Clients can post projects, and Workers can accept projects.
                  Both roles are subject to review and approval.
                </p>

                <h6>3. Account Responsibilities</h6>
                <p>
                  You are responsible for maintaining the confidentiality of
                  your account credentials and for all activities under your
                  account.
                </p>

                <h6>4. Prohibited Activities</h6>
                <ul>
                  <li>Posting inappropriate or illegal content.</li>
                  <li>Engaging in fraudulent activities.</li>
                  <li>
                    Misusing the platform or violating any applicable laws.
                  </li>
                </ul>

                <h6>5. Dispute Resolution</h6>
                <p>
                  In case of disputes between Clients and Workers, the platform
                  will mediate but does not guarantee resolution.
                </p>

                <h6>6. Limitation of Liability</h6>
                <p>
                  The platform is not liable for any direct, indirect, or
                  incidental damages arising from the use of the platform.
                </p>

                <h6>7. Changes to Terms</h6>
                <p>
                  We reserve the right to update these Terms and Conditions at
                  any time. Users will be notified of significant changes.
                </p>

                <h6>8. Contact</h6>
                <p>If you have questions, contact us at support@assocom.com.</p>
                <p>You might even text us 9389600399</p>
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="d-flex justify-content-center">
          <button
            type="button"
            class="btn btn-primary btn-lg w-20"
            id="signupBtn"
          >
            Sign Up
          </button>
        </div>
      </form>

      <!-- GitHub Login Button -->
      <div class="d-flex flex-column align-items-center mt-4">
        <button
          type="button"
          class="btn btn-dark btn-lg mb-3"
          id="githubLoginBtn"
        >
          Sign in with GitHub
        </button>
        <p class="text-center">
          Whether you're visiting for the first time or returning, simply click
          the "Sign in with GitHub" button to access your account. If you're
          new, your account will be created automatically. If you've signed in
          before, this will log you into your existing account. It's quick,
          secure, and hassle-free!
        </p>
      </div>

      <!-- Informative Section -->
      <div class="mt-4 text-center">
        <p>
          Already have an account?
          <a href="/home/signin" class="text-decoration-none">Login here</a>
        </p>
      </div>
    </div>
    <div class="overlay" id="overlay"></div>
    <div class="error-popup" id="errorPopup">
      <p id="errorMessage">An error occurred. Please try again later.</p>
      <button onclick="closePopup()">Close</button>
    </div>

    <!-- JavaScript to handle form submission and validation -->
    <script>
      // Function to display the error popup
      function showErrorPopup(message) {
        errorMessage.textContent = message; // Set the error message
        errorPopup.style.display = "block"; // Show the error popup
        overlay.style.display = "block"; // Show the overlay
      }

      // Function to close the error popup
      function closePopup() {
        errorPopup.style.display = "none"; // Hide the error popup
        overlay.style.display = "none"; // Hide the overlay
      }

      // Get ErrorMessage from the backend (passing from server-side)
      const ErrorMessage = <%- JSON.stringify(locals.ErrorMessage ? locals.ErrorMessage : "") %>;

      const errorPopup = document.getElementById("errorPopup");
      const overlay = document.getElementById("overlay");
      const errorMessage = document.getElementById("errorMessage");

      // If ErrorMessage exists (passed from backend), show the popup with the error message
      if (ErrorMessage) {
        window.scrollTo({
          top: document.body.scrollHeight, // Scroll to the bottom to show alert
          behavior: "smooth", // Smooth scrolling
        });
        showErrorPopup(ErrorMessage); // Display the error message
        setTimeout(() => {
          window.location.href = "/home/signup"; // Redirect to the sign-up page after showing error
        }, 3000);
      }

      // Adding event listener to the signup button
      document
        .getElementById("signupBtn")
        .addEventListener("click", async function () {
          const form = document.getElementById("signupForm");

          // Collect form data
          const formData = new FormData(form);
          const data = {};
          formData.forEach((value, key) => {
            data[key] = value;
          });

          // Check if all fields are filled
          if (
            !data.userName ||
            !data.email ||
            !data.password ||
            !data.confirmPassword ||
            !data.role||
            !data.college
          ) {
            showErrorPopup("Please fill in all fields.");
            return; // Stop further execution if any field is missing
          }

          // Validation for Confirm Password
          const password = data.password;
          const confirmPassword = data.confirmPassword;

          if (password !== confirmPassword) {
            showErrorPopup("Password and Confirm Password do not match.");
            return; // Stop further execution if passwords do not match
          }

          // Remove confirmPassword from the data before sending it
          delete data.confirmPassword;

          // Validation for Terms and Conditions
          const termsChecked = document.getElementById("terms").checked;
          if (!termsChecked) {
            showErrorPopup("You must agree to the Terms and Conditions.");
            return; // Stop further execution if Terms are not checked
          }

          try {
            // Send POST request to the server
            const response = await fetch("/home/signup", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(data), // Send data without confirmPassword
            });

            // Check the response status code
            if (response.ok) {
              const result = await response.json();

              // Create the alert element
              const alert = document.createElement("div");
              alert.classList.add(
                "alert",
                "alert-primary",
                "alert-dismissible",
                "fade",
                "show"
              );
              alert.role = "alert";
              alert.innerHTML = `${result.message} <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>`;

              // Insert the alert as the first element in the body
              document.body.insertBefore(alert, document.body.firstChild);

              // Scroll the user to the top of the page to see the alert
              window.scrollTo({
                top: 0,
                behavior: "smooth", // Smooth scrolling to the top
              });

              // Redirect to login page after a short delay
              setTimeout(() => {
                window.location.href = "/home/signin"; // Redirect to login page
              }, 3000); // Delay of 3 seconds before redirect
            } else {
              // Handle client-side errors (status 400)
              if (response.status === 400) {
                const errorData = await response.json();
                const errorMessages = errorData.errors.join("\n");
                showErrorPopup(errorMessages);
              }
              // Handle rate-limiting (status 429)
              else if (response.status === 429) {
                const errorData = await response.json();
                const errorMessages = errorData.message;
                showErrorPopup(errorMessages);
              }
              // Handle server-side errors (status 500)
              else if (response.status === 500) {
                const errorData = await response.json();
                showErrorPopup(`Server Error: ${errorData.message}`);
              } else {
                // Handle other errors
                showErrorPopup(`Unexpected error occurred: ${response.status}`);
              }
            }
          } catch (error) {
            // Handle network errors
            console.log(error.message);
            showErrorPopup(
              "An error occurred while submitting the form. Please try again later."
            );
          }
        });

      // Add functionality for GitHub login (example placeholder)
      document
        .getElementById("githubLoginBtn")
        .addEventListener("click", function () {
          // Redirect to GitHub login page or trigger GitHub OAuth flow
          window.location.href = "/home/auth/github"; // Adjust the URL as needed
        });
    </script>

    <script>
      function limitEmailWords(event) {
        const inputField = event.target;
        const words = inputField.value.split(/\s+/).filter(Boolean); // split by spaces and remove empty words
        const maxWords = 1;
        const maxLength = 254; // maximum characters allowed in the input

        // Limit words
        if (words.length > maxWords) {
          inputField.value = words.slice(0, maxWords).join(" ");
          showErrorPopup("Email should be one combination of words.");
        }

        // Limit characters
        if (inputField.value.length > maxLength) {
          inputField.value = inputField.value.slice(0, maxLength);
          showErrorPopup("Email should be between 1 and 254 characters.");
        }
      }

      function limitPasswordWords(event) {
        const inputField = event.target;
        const words = inputField.value.split(/\s+/).filter(Boolean); // split by spaces and remove empty words
        const maxWords = 1;
        const maxLength = 15; // maximum characters allowed in the input

        // Limit words
        if (words.length > maxWords) {
          inputField.value = words.slice(0, maxWords).join(" ");
          showErrorPopup("Password should be one combination of words.");
        }

        // Limit characters
        if (inputField.value.length > maxLength) {
          inputField.value = inputField.value.slice(0, maxLength);
          showErrorPopup("Password should be between 6 and 15 characters.");
        }
      }

      function limitUsernameWords(event) {
        const inputField = event.target;
        const words = inputField.value.split(/\s+/).filter(Boolean); // split by spaces and remove empty words
        const maxWords = 1;
        const maxLength = 20; // maximum characters allowed in the input

        // Limit words
        if (words.length > maxWords) {
          inputField.value = words.slice(0, maxWords).join(" ");
          showErrorPopup("userName should be one combination of words.");
        }

        // Limit characters
        if (inputField.value.length > maxLength) {
          inputField.value = inputField.value.slice(0, maxLength);
          showErrorPopup("userName should be between 1 and 20 characters.");
        }
      }
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
      integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
      crossorigin="anonymous"
    ></script>

    <script src="https://www.gstatic.com/firebasejs/9.x.x/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.x.x/firebase-messaging.js"></script>
    <script type="module" src="/js/firebase.js"></script>
  </body>
</html>
